# Generated by Django 4.2.7 on 2025-05-23 16:34

import apps.teachers.models
import apps.teachers.utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('academics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeacherResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('resource_type', models.CharField(choices=[('lecture', 'Lecture Notes'), ('presentation', 'Presentation'), ('assignment', 'Assignment'), ('reference', 'Reference Material'), ('video', 'Video Link'), ('other', 'Other')], default='lecture', max_length=20)),
                ('file', models.FileField(blank=True, help_text='Allowed file types: PDF, DOC, DOCX, PPT, PPTX, TXT, ZIP, RAR. Max size: 10MB', null=True, upload_to=apps.teachers.models.teacher_resource_upload_path, validators=[apps.teachers.utils.validate_file_extension, apps.teachers.utils.validate_file_size])),
                ('external_link', models.URLField(blank=True, help_text='For video links or external resources', null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.academicyear')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.teacherprofile')),
            ],
            options={
                'ordering': ['-uploaded_at'],
                'indexes': [models.Index(fields=['subject', 'is_active'], name='teachers_te_subject_0702cc_idx'), models.Index(fields=['teacher', 'uploaded_at'], name='teachers_te_teacher_5fa6f4_idx')],
            },
        ),
        migrations.CreateModel(
            name='TeacherAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.academicyear')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.teacherprofile')),
            ],
            options={
                'unique_together': {('teacher', 'subject', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('file', models.FileField(blank=True, help_text='Optional: Attach assignment document. Max size: 10MB', upload_to='assignments/', validators=[apps.teachers.utils.validate_file_extension, apps.teachers.utils.validate_file_size])),
                ('due_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('max_marks', models.IntegerField(default=100)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.academicyear')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.teacherprofile')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['subject', 'due_date'], name='teachers_as_subject_61692b_idx'), models.Index(fields=['teacher', 'created_at'], name='teachers_as_teacher_6ddae5_idx')],
            },
        ),
    ]
